#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10
#include <dt-bindings/zmk/pointing.h>


/* Layers */
#define DEF_L 0
#define SYM_L 1
#define NAV_L 2
#define NUM_L 3
#define MSE_L 4
#define KEEB_L 5


/ {

        conditional_layers {
            compatible = "zmk,conditional-layers";
            tri_layer {
                if-layers = <NAV_L SYM_L>;
                then-layer = <NUM_L>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &mo MSE_L &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U     &kp Y   &kp SEMI &none
   &kp ESC   &kp A &kp R &kp S &kp T &kp G   &kp M &kp N  &kp E     &kp I   &kp O    &kp SQT
   &mo KEEB_L &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &kp ESC
             &kp LSHFT &mo NAV_L &kp SPACE   &kp RET &mo SYM_L &kp BSPC
                        >;
                };
                symbol_layer {
                        bindings = <
   &none  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &none
   &kp TAB &none &kp LBKT &kp LBRC  &kp LPAR &none   &none &kp RGUI &kp RALT  &kp RCTRL &kp RSHFT &kp DQT
   &none   &kp PLUS &kp MINUS &kp UNDER  &kp EQUAL &none  &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp QMARK &kp TILDE
                                     &trans &trans  &trans  &trans &trans &trans
                        >;
                };
                navigation_layer {
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4  &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &none &kp LSHFT &kp LCTRL  &kp LALT &kp LGUI &kp BSLH        &kp PIPE &kp RPAR &kp RBRC  &kp RBKT &kp RSHFT &none
   &kp LSHFT  &studio_unlock       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                                     &trans &trans  &trans  &trans &trans &trans
                        >;
                };
                num_layer {
                        bindings = <
   &kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5          &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &none
   &none &kp LSHFT &kp LCTRL  &kp LALT &kp LGUI &none      &none &kp RGUI &kp RALT  &kp RCTRL &kp RSHFT &none
   &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6               &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp 12
                                     &trans &trans  &trans  &trans &trans &trans
                        >;
                };
                mouse_layer {
                        bindings = <
   &trans &none &none &none &none &none                         &none &none &none &none &none &none 
   &trans &trans   &trans &trans   &trans   &trans      &none &mmv MOVE_LEFT &mmv MOVE_DOWN  &mmv MOVE_UP &mmv MOVE_RIGHT &none
   &trans &trans   &trans &trans   &trans   &trans      &none &msc SCRL_LEFT &msc SCRL_DOWN  &msc SCRL_UP &msc SCRL_RIGHT &none
                            &mkp MB4 &mkp LCLK  &mkp MCLK  &mkp MCLK &mkp RCLK &mkp MB5
                        >;
                };
                keeb_layer {
                        bindings = <
   &none &none &none &none &none &none                                           &none &none &none &none &none &none 
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &none &bt BT_NXT &bt BT_PRV &none &none &none
   &studio_unlock  &sys_reset  &bootloader  &trans  &trans  &trans               &trans  &out OUT_TOG  &out OUT_USB  &out OUT_BLE  &trans  &trans
                                     &trans &trans  &trans  &trans &trans &trans
                        >;
                };
        };
};
